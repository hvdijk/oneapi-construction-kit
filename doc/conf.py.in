# -*- coding: utf-8 -*-
#
# ComputeAorta documentation build configuration file, created by
# sphinx-quickstart on Thu Oct 26 15:47:45 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
import sys
from os.path import abspath, join
sys.path.insert(0, abspath('.'))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'breathe',  # Doxygen integration.
    'myst_parser',  # Markdown support.
    'sphinx.ext.autosectionlabel',
    'sphinx.ext.extlinks',
    'sphinx.ext.graphviz',
    'sphinx.ext.todo',
    'sphinx_rtd_theme',
    'sphinxcontrib.moderncmakedomain',  # CMake integration.
]

# Add any paths that contain templates here, relative to this directory.
templates_path = []

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
source_suffix = ['.md', '.rst']

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'ComputeAorta'
copyright = u'(C) Codeplay Software Limited'
latex_copyright = copyright.replace("(C) ", "\\textcopyright~")
author = u'Codeplay Software Ltd.'

# The short X.Y version.
version = u'@ComputeAorta_VERSION_MAJOR@.@ComputeAorta_VERSION_MINOR@'
# The full version, including alpha/beta/rc tags.
release = u'@ComputeAorta_VERSION@'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = [
    'README.md',
    'CMakeLists.txt',
    'requirements.txt',
]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'arduino'

#
extlinks = {
    'opencl-1.2':
    ('https://www.khronos.org/registry/OpenCL/sdk/1.2/docs/man/xhtml/%s.html',
     '%s'),
    'cmake-command':
    ('https://cmake.org/cmake/help/latest/command/%s.html', '%s'),
    'cmake-variable':
    ('https://cmake.org/cmake/help/latest/variable/%s.html', '%s'),
    'spirv':
    ('https://www.khronos.org/registry/SPIR-V/specs/unified1/SPIRV.html#%s',
     '%s'),
}

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

# Configure sphinx.ext.autosectionlabel to require the document prefix when
# cross-referencing document sections.
autosectionlabel_prefix_document = True

# MyST-Parser extension options, to control how Markdown documents are parsed.
myst_heading_anchors = 7  # Enable anchors from headers 7 levels deep.
myst_enable_extensions = [
    'colon_fence',  # Enable ::: fenced code blocks.
    'linkify',  # Make raw URL's into links.
    'substitution',  # Enable substitutions using {{key}} syntax.
    'tasklist',  # Enable check box bullet points.
]

# -- Option for C++ output ------------------------------------------------
# cpp_index_common_prefix = []
cpp_id_attributes = [
    'ABACUS_API',
    'ABACUS_EXPORT_API',
    'CARGO_REINITIALIZES'
    'CL_API_CALL',
    'CL_API_ENTRY',
    'CL_CALLBACK',
    'VKAPI_ATTR',
    'VKAPI_CALL',
    '__CL_BUILTIN_ATTRIBUTES',
    '__CL_PURE_ATTRIBUTES',
]
cpp_paren_attributes = []

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'sphinx_rtd_theme'
html_theme_options = {
    'style_nav_header_background': '#343131',
}
html_logo = '_static/ComputeAorta A.png'
html_favicon = '_static/ComputeAorta.ico'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Additional style sheets for generated HTML.
html_css_files = ['_static/css/theme-override.css']

# Don't link to the page source in the generated HTML.
html_show_sourcelink = False

# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'ComputeAortadoc'

# -- Options for LaTeX output ---------------------------------------------

latex_engine = "xelatex"

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    # 'pointsize': '10pt',

    'maketitle': '''
\\newcommand\\sphinxbackoftitlepage{%s}\\sphinxmaketitle
''' % latex_copyright,

    # Additional stuff for the LaTeX preamble.
    #
    # Use override.sty to change the PDF rendering behaviour of LaTeX to more
    # closely match HTML rendering, see doc/_static/latex/override.sty.
    'preamble': '''
\\newcommand\\codeplaycopyright{%s}
\\input{override.sty}
''' % latex_copyright,

    # Latex figure (float) alignment
    'figure_align': 'H',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    # (  # FIXME: Broken due to doc/api-reference.md excessive nesting
    #     master_doc,
    #     'ComputeAorta.tex',
    #     u'ComputeAorta Documentation',
    #     u'Codeplay Software Ltd.',
    #     'manual',
    #     False,
    # ),
    (
        'overview',
        f'ComputeAorta-Overview-v{version}.tex',
        '',
        'Codeplay Software Ltd.',
        'howto',
        False,
    ),
    (
        'specifications/mux-runtime-spec',
        f'ComputeMux-Runtime-Specification-v{version}.tex',
        '',
        'Codeplay Software Ltd.',
        'howto',
        False,
    ),
    (
        'specifications/mux-compiler-spec',
        f'ComputeMux-Compiler-Specification-v{version}.tex',
        '',
        'Codeplay Software Ltd.',
        'howto',
        False,
    ),
]

# Copy override.sty to the <build>/doc/latex directory so it is available when
# building PDF documents, see preamble above.
latex_additional_files = [
    '_static/latex/override.sty',
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'computeaorta', u'ComputeAorta Documentation', [author], 1),
]

# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'ComputeAorta', u'ComputeAorta Documentation', author,
     'ComputeAorta', 'The heterogeneous language toolkit.', 'Miscellaneous'),
]

# -- Options for Breathe Doxygen documentation ----------------------------
breathe_projects = {
    'ComputeAorta':
    abspath(join('@ComputeAorta_BINARY_DIR@', 'doc', 'doxygen', 'xml'))
}
breathe_default_project = 'ComputeAorta'
breathe_domain_by_extension = {'h': 'cpp'}

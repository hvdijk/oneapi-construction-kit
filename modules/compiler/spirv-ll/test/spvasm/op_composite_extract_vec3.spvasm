; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a Vulkan -c Float64 -c Int64 %spv_file_s | FileCheck %s
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %const "const"
               OpName %a "a"
               OpName %res "res"
       %void = OpTypeVoid
          %2 = OpTypeFunction %void
        %int = OpTypeInt 32 1
    %ptr_int = OpTypePointer Function %int
        %vec = OpTypeVector %int 3
    %ptr_vec = OpTypePointer Function %vec
      %const = OpConstant %int -42
          %7 = OpConstantComposite %vec %const %const %const 
       %main = OpFunction %void None %2
          %9 = OpLabel
          %a = OpVariable %ptr_vec Function
        %res = OpVariable %ptr_int Function
               OpStore %a %7
         %10 = OpLoad %vec %a
         %11 = OpCompositeExtract %int %10 1
               OpStore %res %11
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: = alloca <3 x i32>
; CHECK: = alloca i32
; CHECK: store <3 x i32> {{<(i32 -42(, )?)+>|splat \(i32 -42\)}}, ptr {{[%@].*}}
; CHECK: = load <3 x i32>, ptr {{[%@].*}}
; CHECK: = extractelement <3 x i32> {{[%@].*}}, i64 1
; CHECK: store i32 {{[%@].*}}, ptr {{[%@].*}}

; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a Vulkan -c Float64 -c Int64 %spv_file_s | FileCheck %s
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %a "a"
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
        %ulong = OpTypeInt 64 0
        %uint = OpTypeInt 32 0
    %ptr_ulong = OpTypePointer Function %ulong
    %ptr_uint = OpTypePointer Function %uint
          %9 = OpConstant %ulong 4200000000
       %main = OpFunction %void None %3
          %5 = OpLabel
          %a = OpVariable %ptr_ulong Function
          %b = OpVariable %ptr_uint Function
               OpStore %a %9
         %13 = OpLoad %ulong %a
         %14 = OpUConvert %uint %13 ; testing this
               OpStore %b %14
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: define spir_kernel void @main()
; CHECK: = alloca i64
; CHECK: = alloca i32
; CHECK: store i64 4200000000, {{(ptr|i64\*)}} {{%.*}}
; CHECK: = load i64, {{(ptr|i64\*)}} {{%.*}}
; CHECK: = trunc i64 %2 to i32
; CHECK: store i32 {{%.*}}, {{(ptr|i32\*)}} {{%.*}}
; CHECK: ret void

; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a Vulkan -c Addresses -c Float64 -c Int64 %spv_file_s | FileCheck %s
            OpCapability Addresses
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %main "main"
               OpName %res "res"
               OpName %Foo "Foo"
               OpMemberName %Foo 0 "a"
               OpMemberName %Foo 1 "b"
               OpName %f "f"
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
%struct_float = OpTypeFloat 32
%_ptr_Function_float = OpTypePointer Function %struct_float
%long = OpTypeInt 64 1 ; this should be blank if type is Foo
          %9 = OpConstant %struct_float 42.42
 %struct_int = OpTypeInt 32 0
               OpTypeForwardPointer %ptr_Foo Function
   %ptr_long = OpTypePointer Function %long
        %Foo = OpTypeStruct %struct_int %struct_float %ptr_long
    %ptr_Foo = OpTypePointer Function %Foo
         %14 = OpConstant %struct_int 1
       %main = OpFunction %void None %3
          %5 = OpLabel
        %res = OpVariable %_ptr_Function_float Function
          %f = OpVariable %ptr_Foo Function
         %15 = OpInBoundsAccessChain %_ptr_Function_float %f %14
         %16 = OpLoad %struct_float %15
         %17 = OpFAdd %struct_float %9 %16
               OpStore %res %17
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: = type { i32, float, ptr }
; CHECK: define spir_kernel void @main()
; CHECK: = alloca float
; CHECK: = alloca {{[%@].*}}
; CHECK: = getelementptr inbounds {{[%@].*}}, ptr {{[%@].*}}, i32 0, i32 1
; CHECK: = load float, ptr {{[%@].*}}
; CHECK: = fadd float {{(-?[0-9]+\.[0-9]+e\+[0-9]+|0x[0-9A-F]+)}}, {{[%@].*}}
; CHECK: store float {{[%@].*}}, ptr {{[%@].*}}
; CHECK: ret void

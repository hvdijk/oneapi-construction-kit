; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a Vulkan -c Float64 -c Int64 %spv_file_s | FileCheck %s
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %a "a"
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
      %int_42 = OpConstant %int 42
      %int_0 = OpConstant %int 0
       %bool = OpTypeBool
      %int_1 = OpConstant %int 1
       %main = OpFunction %void None %3
          %5 = OpLabel
          %a = OpVariable %_ptr_Function_int Function
               OpStore %a %int_42
               OpBranch %10
         %10 = OpLabel
               OpLoopMerge %12 %13 Unroll
               OpBranch %14
         %14 = OpLabel
         %15 = OpLoad %int %a
         %18 = OpSGreaterThan %bool %15 %int_0
               OpBranchConditional %18 %11 %12 5 2
         %11 = OpLabel
         %19 = OpLoad %int %a
         %21 = OpISub %int %19 %int_1
               OpStore %a %21
               OpBranch %13
         %13 = OpLabel
               OpBranch %10
         %12 = OpLabel
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: define spir_kernel void @main()
; CHECK: = alloca i32
; CHECK: store i32 42, ptr {{[%@].*}}
; CHECK: br label {{[%@].*}}
; CHECK: {{[0-9]+:}}
; CHECK: br label {{[%@].*}}
; CHECK: {{[0-9]+:}}
; CHECK: = load i32, ptr {{[%@].*}}
; CHECK: = icmp sgt i32 {{[%@].*}}, 0
; CHECK: br i1 {{[%@].*}}, label {{[%@].*}}, label {{[%@].*}}, !prof !1
; CHECK: {{[0-9]+:}}
; CHECK: = load i32, ptr {{[%@].*}}
; CHECK: = sub i32 {{[%@].*}}, 1
; CHECK: store i32 {{[%@].*}}, ptr {{[%@].*}}
; CHECK: br label {{[%@].*}}
; CHECK: {{[0-9]+:}}
; CHECK: br label {{[%@].*}}, !llvm.loop !2
; CHECK: {{[0-9]+:}}
; CHECK: ret void
; CHECK: !llvm.ident = !{!0}
; CHECK: !0 = !{!"Source language: GLSL, Version: 450"}
; CHECK: !1 = !{!"branch_weights", i32 5, i32 2}
; CHECK: !2 = distinct !{!2, !3}
; CHECK: !3 = !{!"llvm.loop.unroll.enable"}

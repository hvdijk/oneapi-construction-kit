; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a Vulkan -e SPV_KHR_no_integer_wrap_decoration %spv_file_s | FileCheck %s
               OpCapability Shader
               OpExtension "SPV_KHR_no_integer_wrap_decoration"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main"
               OpExecutionMode %main LocalSize 1 1 1
               OpSource GLSL 450
               OpSourceExtension "GL_GOOGLE_cpp_style_line_directive"
               OpSourceExtension "GL_GOOGLE_include_directive"
               OpName %main "main"
               OpName %a "a"
               OpName %b "b"
               OpDecorate %20 NoUnsignedWrap
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
        %int = OpTypeInt 32 0
        %Foo = OpTypeStruct %int %int
    %ptr_int = OpTypePointer Function %int
         %14 = OpConstant %int 24
         %16 = OpConstant %int 24
       %main = OpFunction %void None %3
          %5 = OpLabel
          %a = OpVariable %ptr_int Function
          %b = OpVariable %ptr_int Function
               OpStore %a %14
               OpStore %b %16
         %18 = OpLoad %int %a
         %19 = OpLoad %int %b
         %20 = OpShiftLeftLogical %int %18 %19 ;testing this
               OpStore %a %20
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: define spir_kernel void @main()
; CHECK: [[A:%.*]] = alloca i32
; CHECK: [[B:%.*]] = alloca i32
; CHECK: store i32 24, ptr [[A]]
; CHECK: store i32 24, ptr [[B]]
; CHECK: [[AVAL:%.*]] = load i32, ptr [[A]]
; CHECK: [[BVAL:%.*]] = load i32, ptr [[B]]
; CHECK: [[RES:%.*]] = shl nuw i32 [[AVAL]], [[BVAL]]
; CHECK: store i32 [[RES]], ptr [[A]]
; CHECK: ret void

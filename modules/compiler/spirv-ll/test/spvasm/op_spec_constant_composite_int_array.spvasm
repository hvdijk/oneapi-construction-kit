; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a Vulkan -c Float64 -c Int64 %spv_file_s | FileCheck %s
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %test_block "test_block"
               OpMemberName %test_block 0 "test_out"
               OpName %_ ""
               OpMemberDecorate %test_block 0 Offset 0
               OpDecorate %test_block BufferBlock
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %14 SpecId 0
               OpDecorate %arr_int ArrayStride 4
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
        %int = OpTypeInt 32 1
   %idx_type = OpTypeInt 32 0
          %8 = OpConstant %idx_type 4
    %arr_int = OpTypeArray %int %8
 %test_block = OpTypeStruct %arr_int
%_ptr_Uniform_test_block = OpTypePointer Uniform %test_block
          %_ = OpVariable %_ptr_Uniform_test_block Uniform
         %13 = OpConstant %idx_type 0
         %14 = OpSpecConstant %int -42
         %15 = OpSpecConstantComposite %arr_int %14 %14 %14 %14 ; testing this
%ptr_arr_int = OpTypePointer Uniform %arr_int
       %main = OpFunction %void None %3
          %5 = OpLabel
         %17 = OpAccessChain %ptr_arr_int %_ %13
               OpStore %17 %15
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: = type { [4 x i32] }
; CHECK: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}})
; CHECK: = getelementptr {{[%@].*}}, ptr addrspace(1) {{[%@].*}}, i32 0, i32 0
; CHECK: store [4 x i32] [i32 -42, i32 -42, i32 -42, i32 -42], ptr addrspace({{[0-9]}}) {{[%@].*}}
; CHECK: ret void

; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a Vulkan -c Float64 -c Int64 %spv_file_s | FileCheck %s
            OpCapability Shader
            OpCapability Float64
            OpCapability Int64
            OpMemoryModel Logical GLSL450
            OpEntryPoint GLCompute %main "main"
            OpExecutionMode %main LocalSize 1 1 1
            OpSource GLSL 450
            OpName %main "main"
            OpName %a_block "a_block"
               OpMemberName %a_block 0 "test_out"
               OpName %_ ""
               OpMemberDecorate %a_block 0 Offset 0
               OpDecorate %a_block BufferBlock
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %11 SpecId 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
        %uint = OpTypeInt 32 0
    %a_block = OpTypeStruct %uint
%ptr_Uniform_block = OpTypePointer Uniform %a_block
          %_ = OpVariable %ptr_Uniform_block Uniform
         %10 = OpConstant %uint 0
         %11 = OpSpecConstant %uint 42 ; testing this
%ptr_Uniform_uint = OpTypePointer Uniform %uint
       %main = OpFunction %void None %3
          %5 = OpLabel
         %13 = OpAccessChain %ptr_Uniform_uint %_ %10
               OpStore %13 %11
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: [[a_block:%.*]] = type { i32 }
; CHECK: define spir_kernel void @main(ptr addrspace(1){{( %0)?}}, ptr addrspace(1){{( %1)?}})
; CHECK: [[anon:%.*]] = getelementptr [[a_block]], ptr addrspace(1) {{%.*}}, i32 0, i32 0
; CHECK: store i32 42, ptr addrspace(1) [[anon]]
; CHECK: ret void
